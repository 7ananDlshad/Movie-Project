{"version":3,"sources":["Components/Api.js","Components/DropdownCategories.js","StateProvider.js","Components/SearchBox.js","Components/Navbar.js","Components/MovieItem.js","Components/MoviesGrid.js","Components/MainPage.js","Components/MoviePage.js","Components/Footer.js","Components/ArabicMovie.js","Components/ActorPage.js","App.js","serviceWorker.js","index.js"],"names":["API_KEY","constructUrl","path","query","queryText","arabicMovie","DropdownCategories","props","SEARCH_URL_CATEGORIES","useState","categories","setCategories","useEffect","fetch","then","res","json","data","undefined","genres","id","name","catch","err","console","log","Dropdown","style","marginRight","Toggle","className","category","Menu","length","map","Item","href","key","onSelect","setCategory","StateContext","createContext","StateProvider","useReducer","reducer","initialState","state","dispatch","Provider","value","children","isLoading","movies","action","type","payload","SearchBox","useContext","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","searchQuery","has","get","categoryId","parseInt","categoryName","setQuery","SEARCH_URL","results","filter","movie","genre_ids","includes","fetchMovies","Form","inline","onSubmit","event","preventDefault","push","pathname","flexFlow","FormControl","placeholder","onChange","e","target","Button","Spinner","animation","variant","size","Navbar","expand","to","Brand","icon","faFilm","fontSize","aria-controls","Collapse","Nav","MovieItem","Card","width","height","Img","src","backdrop_path","Body","Title","title","substr","Badge","release_date","vote_average","MoviesGrid","Row","md","lg","xs","Col","MainPage","MoviePage","setMovie","trailers","setTrailers","actors","setActors","movie_id","match","params","a","resTrailer","dataTrailer","tmp","trailer","resActors","dataActors","cast","fetchData","baseUrl","nullPhoto","posterImage","poster_path","backgroundImage","backgroundSize","position","onClick","goBack","faArrowLeft","Container","alt","original_title","fontWeight","tagline","overview","genre","marginLeft","sm","align","Carousel","zIndex","v","i","url","actor","margin","profile_path","minHeight","objectFit","Footer","ArabicMovie","setMovies","items","ActorPage","actorId","person","setPerson","profileImage","birthday","place_of_birth","biography","App","component","exact","TopRated","Upcoming","Latest","NowPlaying","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4156fe83.chunk.js","sourcesContent":["const TMDB_BASE_URL = `https://api.themoviedb.org/3`;\r\nconst API_KEY = '542003918769df50083a13c415bbc602';\r\n\r\nexport function constructUrl(path, query) {\r\n  const queryText = query ? `&query=${query}` : '';\r\n  return `${TMDB_BASE_URL}/${path}?api_key=${API_KEY}` + queryText;\r\n}\r\nexport function arabicMovie() {\r\n  return `${TMDB_BASE_URL}/list/457?api_key=${API_KEY}`;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nexport default function DropdownCategories(props) {\r\n  const SEARCH_URL_CATEGORIES = constructUrl('genre/movie/list', '');\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(SEARCH_URL_CATEGORIES)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.genres !== undefined)\r\n          setCategories([{ id: 0, name: 'All' }, ...data.genres]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [SEARCH_URL_CATEGORIES]);\r\n\r\n  return (\r\n    <Dropdown style={{ marginRight: '5px' }}>\r\n      <Dropdown.Toggle id=\"dropdown-basic\" className=\"button-style bg-orange\">\r\n        {props.category.name || 'Categories'}\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu className=\"bg-black\">\r\n        {categories.length > 0 &&\r\n          categories.map((category) => (\r\n            <Dropdown.Item\r\n              href=\"#\"\r\n              key={category.id}\r\n              onSelect={() => props.setCategory(category)}\r\n              className=\"menu-item-style\"\r\n            >\r\n              {category.name}\r\n            </Dropdown.Item>\r\n          ))}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <StateContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  movies: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"setLoading\":\r\n      return { ...state, isLoading: action.payload };\r\n    case \"setMovies\":\r\n      state.movies=action.payload;\r\n      return state  ;\r\n    default:\r\n      return state ;\r\n  }\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Button, Form, FormControl, Spinner } from 'react-bootstrap';\r\nimport DropdownCategories from './DropdownCategories';\r\nimport { constructUrl } from './Api';\r\nimport { StateContext } from '../StateProvider';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nexport default function SearchBox() {\r\n  const [state, dispatch] = useContext(StateContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const searchQuery = searchParams.has('query')\r\n    ? searchParams.get('query')\r\n    : '';\r\n  const categoryId = searchParams.has('categoryId')\r\n    ? parseInt(searchParams.get('categoryId'))\r\n    : 0;\r\n  const categoryName = searchParams.has('categoryName')\r\n    ? searchParams.get('categoryName')\r\n    : 'All';\r\n\r\n  const [category, setCategory] = useState({\r\n    id: categoryId,\r\n    name: categoryName,\r\n  });\r\n\r\n  const changeCategory = (category) => {\r\n    setCategory(category);\r\n  };\r\n\r\n  const [query, setQuery] = useState(searchQuery);\r\n\r\n  const onChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch({ type: 'setMovies', payload: [] });\r\n\r\n    dispatch({ type: 'setLoading', payload: true });\r\n\r\n    history.push({\r\n      pathname: '/search',\r\n      search:\r\n        '?query=' +\r\n        query +\r\n        '&categoryId=' +\r\n        category.id +\r\n        '&categoryName=' +\r\n        category.name,\r\n    });\r\n  };\r\n\r\n  useEffect(() => fetchMovies(searchQuery), [searchQuery, categoryId]);\r\n\r\n  function fetchMovies(query = '') {\r\n    let SEARCH_URL;\r\n    if (query !== '') {\r\n      SEARCH_URL = constructUrl('search/movie', query);\r\n    } else {\r\n      SEARCH_URL = constructUrl('movie/popular');\r\n    }\r\n\r\n    fetch(SEARCH_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.results !== undefined) {\r\n          let movies = data.results;\r\n          if (category.id) {\r\n            movies = movies.filter((movie) =>\r\n              movie.genre_ids.includes(category.id)\r\n            );\r\n          }\r\n\r\n          dispatch({ type: 'setMovies', payload: movies });\r\n        }\r\n        dispatch({ type: 'setLoading', payload: false });\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <Form inline onSubmit={onSubmit} style={{ flexFlow: 'row' }}>\r\n      <DropdownCategories category={category} setCategory={changeCategory} />\r\n\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        className=\"mr-sm-2\"\r\n        value={query}\r\n        onChange={onChange}\r\n      />\r\n      <Button type=\"submit\" className=\"bg-orange\">\r\n        Search &nbsp;\r\n        <span>\r\n          {state.isLoading ? (\r\n            <Spinner animation=\"border\" variant=\"dark\" size=\"sm\" />\r\n          ) : (\r\n            ' '\r\n          )}\r\n        </span>\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Navbar as NavBarBootstarp, Nav } from 'react-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { Link } from 'react-router-dom';\r\nimport { faFilm } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <NavBarBootstarp expand=\"lg\" className=\"flex-shrink-1 navbar-style\">\r\n      <Link to=\"/\">\r\n        <NavBarBootstarp.Brand className=\"white-color\">\r\n          <FontAwesomeIcon\r\n            icon={faFilm}\r\n            style={{ fontSize: '25px' }}\r\n            className=\"orange-color\"\r\n          />\r\n        </NavBarBootstarp.Brand>\r\n      </Link>\r\n      <NavBarBootstarp.Toggle aria-controls=\"basic-Navbar-nav\" />\r\n      <NavBarBootstarp.Collapse id=\"basic-Navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link to=\"/\" className=\"white-color links titles\">\r\n            Home &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n          <Link to=\"/list/457\" className=\"white-color links titles\">\r\n            Arabic Movie &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n          <Link to=\"\" className=\"white-color links titles\">\r\n            Top Rated &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n          <Link to=\"\" className=\"white-color links titles\">\r\n            Upcoming &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n          <Link to=\"\" className=\"white-color links titles\">\r\n            Latest &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n          <Link to=\"\" className=\"white-color links titles\">\r\n            Now Playing &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Link>\r\n        </Nav>\r\n\r\n        <SearchBox />\r\n      </NavBarBootstarp.Collapse>\r\n    </NavBarBootstarp>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function MovieItem(props) {\r\n  const baseUrl = 'https://image.tmdb.org/t/p/w500/';\r\n  const nullPhoto =\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png';\r\n\r\n  return (\r\n    <Link to={`/Movie/${props.movie.id}`} className=\"links\">\r\n      <Card key={props.movie.id} style={{ width: '100%', height: '100%' }}>\r\n        <Card.Img\r\n          src={\r\n            props.movie.backdrop_path !== null\r\n              ? baseUrl + props.movie.backdrop_path\r\n              : nullPhoto\r\n          }\r\n          className=\"height-image-card\"\r\n        />\r\n        <Card.Body>\r\n          <Card.Title\r\n            title={props.movie.title}\r\n            className=\"white-color titles\"\r\n            style={{ fontSize: '18px' }}\r\n          >\r\n            {`${props.movie.title}`.substr(0, 20)}\r\n            {props.movie.title.length >= 20 ? '...' : ''}\r\n          </Card.Title>\r\n          <div className=\"badges-place\">\r\n            <Badge className=\"white-color bg-orange\">\r\n              {props.movie.release_date}\r\n            </Badge>\r\n            <Badge className=\"white-color bg-orange\">\r\n              Rating: ({props.movie.vote_average})\r\n            </Badge>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport MovieItem from './MovieItem';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { StateContext } from '../StateProvider';\r\n\r\nexport default function MoviesGrid() {\r\n  const [state] = useContext(StateContext);\r\n\r\n  return (\r\n    <div className=\"flex-grow-1 container my-4\">\r\n      <Row md={3} lg={4} xs={1}>\r\n        {state.movies.map((movie) => (\r\n          <Col key={movie.id} className=\"my-3\">\r\n            <MovieItem movie={movie} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport MoviesGrid from \"./MoviesGrid\";\r\nimport { StateContext } from \"../StateProvider\";\r\nfunction MainPage() {\r\n  const [state] = useContext(StateContext);\r\n  return <>{!state.isLoading  && <MoviesGrid />}</>;\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport {\r\n  Button,\r\n  Badge,\r\n  Container,\r\n  Row,\r\n  Spinner,\r\n  Col,\r\n  Carousel,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport ReactPlayer from 'react-player';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function MoviePage(props) {\r\n  const history = useHistory();\r\n  const [movie, setMovie] = useState('');\r\n  const [trailers, setTrailers] = useState([]);\r\n  const [actors, setActors] = useState([]);\r\n\r\n  let movie_id = props.match.params.id;\r\n  let SEARCH_URL;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      SEARCH_URL = constructUrl(`movie/${movie_id}`);\r\n      let res = await fetch(SEARCH_URL);\r\n      let data = await res.json();\r\n\r\n      SEARCH_URL = constructUrl(`movie/${movie_id}/videos`);\r\n      let resTrailer = await fetch(SEARCH_URL);\r\n      let dataTrailer = await resTrailer.json();\r\n      const tmp = [];\r\n      dataTrailer.results.map(function (trailer) {\r\n        tmp.push(`https://www.youtube.com/watch?v=${trailer.key}`);\r\n        return tmp;\r\n      });\r\n      setTrailers(tmp);\r\n\r\n      SEARCH_URL = constructUrl(`movie/${movie_id}/credits`);\r\n      let resActors = await fetch(SEARCH_URL);\r\n      let dataActors = await resActors.json();\r\n      let actors = dataActors.cast;\r\n\r\n      setActors(actors);\r\n      setMovie(data);\r\n    }\r\n    fetchData();\r\n  }, [movie_id]);\r\n\r\n  const baseUrl = 'https://image.tmdb.org/t/p/original';\r\n  const nullPhoto =\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png';\r\n\r\n  const posterImage = movie.poster_path\r\n    ? baseUrl + movie.poster_path\r\n    : nullPhoto;\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"flex-grow-1\"\r\n        style={{\r\n          backgroundImage: `url(${\r\n            movie.backdrop_path !== null\r\n              ? `https://image.tmdb.org/t/p/original${movie.backdrop_path}`\r\n              : nullPhoto\r\n          })`,\r\n          backgroundSize: 'cover',\r\n          width: '100%',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <div className=\"mask\">\r\n          <Button onClick={() => history.goBack()} className=\"bg-orange m-2\">\r\n            <FontAwesomeIcon\r\n              icon={faArrowLeft}\r\n              style={{ fontSize: '25px' }}\r\n              className=\"white-color \"\r\n            />\r\n          </Button>\r\n        </div>\r\n        {movie.id && (\r\n          <Container>\r\n            <Row>\r\n              <div className=\"col-4 my-5\">\r\n                <img width=\"100%\" alt=\"posterImage\" src={posterImage} />\r\n              </div>\r\n              <div className=\"col-6 text-white my-5\">\r\n                <h1>{movie.original_title}</h1>\r\n                <small style={{ fontWeight: 'lighter' }}>\r\n                  <em>{movie.tagline}</em>\r\n                </small>\r\n                <br /> <br />\r\n                <h3>Overview:</h3>\r\n                <h5>\" {movie.overview} \"</h5>\r\n                <br />\r\n                <br />\r\n                {movie.genres\r\n                  ? movie.genres.map((genre) => {\r\n                      return (\r\n                        <Badge\r\n                          style={{ marginRight: '20px', marginLeft: '10px' }}\r\n                          className=\"bg-orange\"\r\n                        >\r\n                          {genre.name}\r\n                        </Badge>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n        )}\r\n        {!movie.id && (\r\n          <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" />\r\n        )}\r\n      </div>\r\n      <div className=\"my-5\">\r\n        <Col sm={12} className=\"CarouselCol\" align=\"middle\">\r\n          <Carousel className=\"Carousel\" style={{ zIndex: 3 }}>\r\n            {trailers.map((v, i) => {\r\n              return (\r\n                <Carousel.Item>\r\n                  <ReactPlayer width=\"100%\" key={`haha-${i}`} url={v} />\r\n                </Carousel.Item>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </Col>\r\n      </div>\r\n\r\n      <div className=\"card-container m-3\">\r\n        {actors.map((actor) => {\r\n          return (\r\n            <Link\r\n              key={actor.id}\r\n              to={`/person/${actor.id}`}\r\n              className=\"links\"\r\n              style={{ margin: '15px 8px 8px 8px ' }}\r\n            >\r\n              <Card\r\n                key={'1' + actor.id}\r\n                style={{ width: '150px' }}\r\n                className=\"mb-4\"\r\n              >\r\n                <Card.Img\r\n                  src={\r\n                    actor.profile_path !== null\r\n                      ? baseUrl + actor.profile_path\r\n                      : nullPhoto\r\n                  }\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '15wh',\r\n                    minHeight: '220px',\r\n                    objectFit: 'cover',\r\n                  }}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title\r\n                    className=\"white-color titles\"\r\n                    style={{ fontSize: '13px' }}\r\n                  >\r\n                    {`${actor.name}`.substr(0, 14)}\r\n                    {actor.name.length >= 16 ? '...' : ''}\r\n                  </Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"text-light text-center flex-shrink-1 footer-style\">\r\n      <p className=\"py-3\">\r\n        Developed with <span className=\"orange-color\">❤</span> by\r\n        <span className=\"orange-color\"> Persevers</span>\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { arabicMovie } from './Api';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Card, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ArabicMovie() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  let SEARCH_URL;\r\n\r\n  const baseUrl = 'https://image.tmdb.org/t/p/original/';\r\n  const nullPhoto =\r\n    'https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-scaled-1150x647.png';\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      SEARCH_URL = arabicMovie();\r\n      let res = await fetch(SEARCH_URL);\r\n      let data = await res.json();\r\n\r\n      setMovies(data.items);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movies);\r\n  return (\r\n    <div className=\"flex-grow-1 container my-4\">\r\n      <Row md={3} lg={4} xs={1}>\r\n        {movies.map((movie) => (\r\n          <Col key={movie.id} className=\"my-3\">\r\n            <Link to={`/Movie/${movie.id}`} className=\"links\">\r\n              <Card key={movie.id} style={{ width: '100%', height: '100%' }}>\r\n                <Card.Img\r\n                  src={\r\n                    movie.poster_path !== null\r\n                      ? baseUrl + movie.poster_path\r\n                      : nullPhoto\r\n                  }\r\n                  className=\"height-image-card\"\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title\r\n                    title={movie.title}\r\n                    className=\"white-color titles\"\r\n                    style={{ fontSize: '18px' }}\r\n                  >\r\n                    {`${movie.title}`.substr(0, 20)}\r\n                    {movie.title.length >= 20 ? '...' : ''}\r\n                  </Card.Title>\r\n                  <div className=\"badges-place\">\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      {movie.release_date}\r\n                    </Badge>\r\n                    <Badge className=\"white-color bg-orange\">\r\n                      Rating: ({movie.vote_average})\r\n                    </Badge>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default ArabicMovie;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { constructUrl } from './Api';\r\nimport { Button, Container, Row, Spinner } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function ActorPage(props) {\r\n  let actorId = props.match.params.actorId;\r\n  const history = useHistory();\r\n\r\n  const [person, setPerson] = useState({});\r\n  useEffect(() => {\r\n    const SEARCH_URL = constructUrl(`person/${actorId}`);\r\n    fetch(SEARCH_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => setPerson(data));\r\n  }, [actorId]);\r\n  const baseUrl = 'https://image.tmdb.org/t/p/w500/';\r\n  const nullPhoto =\r\n    'https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png';\r\n\r\n  const profileImage = person.profile_path\r\n    ? baseUrl + person.profile_path\r\n    : nullPhoto;\r\n  console.log(person);\r\n  return (\r\n    <div className=\"flex-grow-1 \">\r\n      <Button onClick={() => history.goBack()} className=\"bg-orange m-2\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowLeft}\r\n          style={{ fontSize: '25px' }}\r\n          className=\"white-color \"\r\n        />\r\n      </Button>\r\n      {person.id && (\r\n        <Container>\r\n          <Row>\r\n            <div className=\"col-4\">\r\n              <img width=\"100%\" alt=\"posterImage\" src={profileImage} />\r\n            </div>\r\n            <div className=\"col-8 text-white\">\r\n              <h1>{person.name}</h1>\r\n\r\n              <small>\r\n                <em>\r\n                  {person.birthday} , {person.place_of_birth}\r\n                </em>\r\n              </small>\r\n              <br />\r\n              <br />\r\n              <p>{person.biography}</p>\r\n              <br />\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n      {!person.id && <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" />}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Navbar from './Components/Navbar';\r\nimport MainPage from './Components/MainPage';\r\nimport MoviePage from './Components/MoviePage';\r\nimport Footer from './Components/Footer';\r\n\r\nimport ArabicMovie from './Components/ArabicMovie';\r\nimport TopRated from './Components/TopRated';\r\nimport Upcoming from './Components/Upcoming';\r\nimport Latest from './Components/Latest';\r\nimport NowPlaying from './Components/NowPlaying';\r\n\r\nimport ActorPage from './Components/ActorPage';\r\nimport { StateProvider } from './StateProvider';\r\nimport { Route, Redirect, Switch, HashRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <StateProvider>\r\n      <HashRouter>\r\n        <div className=\"d-flex flex-column vh-100 align-items-stretch p-0 m-0\">\r\n          <Navbar />\r\n\r\n          <Switch>\r\n            <Route path=\"/iraq-bc-movies-project-students\">\r\n              <Redirect to=\"/\" />\r\n            </Route>\r\n            <Route path={'/Movie/:id'} component={MoviePage} />\r\n            <Route path={'/person/:actorId'} component={ActorPage} />\r\n            <Route exact path=\"/\" component={MainPage} />\r\n            <Route path=\"/search\" component={MainPage} />\r\n            <Route path=\"/list/457\" component={ArabicMovie} />\r\n            <Route path=\"\" component={TopRated} />\r\n            <Route path=\"\" component={Upcoming} />\r\n            <Route path=\"\" component={Latest} />\r\n            <Route path=\"\" component={NowPlaying} />\r\n          </Switch>\r\n\r\n          <Footer />\r\n        </div>\r\n      </HashRouter>\r\n    </StateProvider>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}